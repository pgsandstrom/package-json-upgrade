{
  "name": "package-json-upgrade",
  "displayName": "Package Json Upgrade",
  "description": "Shows available updates in package.json files. Offers quick fix command to update them and to show the changelog.",
  "version": "1.5.3",
  "publisher": "codeandstuff",
  "license": "MIT",
  "icon": "logo/icon.png",
  "engines": {
    "vscode": "^1.41.1"
  },
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "npm",
    "package.json",
    "dependencies",
    "upgrade",
    "update"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/pgsandstrom/package-json-upgrade.git"
  },
  "activationEvents": [
    "onLanguage:json"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Package json upgrade",
      "properties": {
        "package-json-upgrade.showUpdatesAtStart": {
          "type": "boolean",
          "default": true,
          "description": "Available updates will be shown directly when a package.json is opened. Otherwise, this must be toggled with a command."
        },
        "package-json-upgrade.skipNpmConfig": {
          "type": "boolean",
          "default": false,
          "description": "Skip reading your npm configuration. Check this to skip using configuration such as proxies and caching that might be defined in your npm configuration. Try this out if the extension appears to not be working."
        },
        "package-json-upgrade.majorUpgradeColorOverwrite": {
          "type": "string",
          "default": "",
          "description": "Specify a color (like #FF0000) to override the color of major upgrades. Leave empty for default color."
        },
        "package-json-upgrade.minorUpgradeColorOverwrite": {
          "type": "string",
          "default": "",
          "description": "Specify a color (like #FFFF00) to override the color of minor upgrades. Leave empty for default color."
        },
        "package-json-upgrade.patchUpgradeColorOverwrite": {
          "type": "string",
          "default": "",
          "description": "Specify a color (like #00FF00) to override the color of patch upgrades. Leave empty for default color."
        },
        "package-json-upgrade.prereleaseUpgradeColorOverwrite": {
          "type": "string",
          "default": "",
          "description": "Specify a color (like #00FF00) to override the color of prerelease upgrades. Leave empty for default color."
        },
        "package-json-upgrade.decorationString": {
          "type": "string",
          "default": "\t\tUpdate available: %s",
          "description": "Customize update string. %s will be replaced by version, so 'Update: %s' will result in 'Update: 1.0.1'."
        },
        "package-json-upgrade.ignorePatterns": {
          "type": "array",
          "default": [],
          "description": "A list of regex pattern of packages to not show decoration string for. To ignore all material-ui packages the JSON should be [\"^(?=@material-ui).+$\"]"
        },
        "package-json-upgrade.ignoreVersions": {
          "type": "object",
          "default": {},
          "description": "Semver ranges of versions to ignore for specific packages. If you  want to ignore all @types/node versions 12 or greater the JSON should be {\"@types/node\": \">=12\"}. If you want to add several ignored semver ranges you can do {\"@types/node\": [\"=12.0.0\", \"=12.0.1\"]}."
        }
      }
    },
    "commands": [
      {
        "command": "package-json-upgrade.toggle-show",
        "title": "Toggle showing package.json available updates"
      },
      {
        "command": "package-json-upgrade.update-all",
        "title": "Update all dependencies in the current package.json file"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "compile": "tsc -p ./",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js",
    "format": "prettier --write \"src/**/*.{json,md,ts,tsx,css,scss}\"",
    "lint": "node ./node_modules/eslint/bin/eslint.js --ext .ts --ext .tsx --fix src",
    "package": "vsce package",
    "pre-commit": "lint-staged",
    "pre-push": "npm run lint && npm run typecheck && npm run test",
    "typecheck": "tsc --noEmit",
    "prepare": "husky install"
  },
  "lint-staged": {
    "*.{json,md,css,scss}": [
      "prettier --write"
    ],
    "*.{ts,tsx}": [
      "node ./node_modules/eslint/bin/eslint.js --fix",
      "prettier --write"
    ]
  },
  "dependencies": {
    "libnpmconfig": "1.2.1",
    "node-fetch": "3.1.1",
    "npm-registry-fetch": "11.0.0",
    "semver": "7.3.5"
  },
  "devDependencies": {
    "@types/glob": "7.1.4",
    "@types/mocha": "9.0.0",
    "@types/node": "13.13.52",
    "@types/node-fetch": "2.5.12",
    "@types/npm-registry-fetch": "8.0.1",
    "@types/semver": "7.3.8",
    "@types/vscode": "1.41.0",
    "@typescript-eslint/eslint-plugin": "4.29.3",
    "@typescript-eslint/parser": "4.29.3",
    "cross-env": "7.0.3",
    "eslint": "7.32.0",
    "eslint-config-prettier": "8.3.0",
    "glob": "7.1.7",
    "husky": "7.0.1",
    "lint-staged": "11.1.2",
    "mocha": "9.1.1",
    "prettier": "2.3.2",
    "ts-loader": "9.2.5",
    "typescript": "4.4.2",
    "vsce": "1.96.1",
    "vscode-test": "1.6.1",
    "webpack": "5.51.1",
    "webpack-cli": "4.8.0"
  }
}
